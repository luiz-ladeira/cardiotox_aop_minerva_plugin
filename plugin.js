!function o(i,r,a){function l(n,e){if(!r[n]){if(!i[n]){var t="function"==typeof require&&require;if(!e&&t)return t(n,!0);if(d)return d(n,!0);throw(e=new Error("Cannot find module '"+n+"'")).code="MODULE_NOT_FOUND",e}t=r[n]={exports:{}},i[n][0].call(t.exports,function(e){return l(i[n][1][e]||e)},t,t.exports,o,i,r,a)}return r[n].exports}for(var d="function"==typeof require&&require,e=0;e<a.length;e++)l(a[e]);return l}({1:[function(e,n,t){function a(e,n){var t=document.head||document.getElementsByTagName("head")[0],o=i[i.length-1];if((n=n||{}).insertAt=n.insertAt||"bottom","top"===n.insertAt)o?o.nextSibling?t.insertBefore(e,o.nextSibling):t.appendChild(e):t.insertBefore(e,t.firstChild),i.push(e);else{if("bottom"!==n.insertAt)throw new Error("Invalid value for parameter 'insertAt'. Must be 'top' or 'bottom'.");t.appendChild(e)}}var i=[];n.exports={createLink:function(e,n){var t,o,i=document.head||document.getElementsByTagName("head")[0],r=document.createElement("link");for(t in r.href=e,r.rel="stylesheet",n)n.hasOwnProperty(t)&&(o=n[t],r.setAttribute("data-"+t,o));i.appendChild(r)},createStyle:function(e,n,t){t=t||{};var o,i,r=document.createElement("style");for(o in r.type="text/css",n)n.hasOwnProperty(o)&&(i=n[o],r.setAttribute("data-"+o,i));r.sheet?(r.innerHTML=e,r.sheet.cssText=e,a(r,{insertAt:t.insertAt})):r.styleSheet?(a(r,{insertAt:t.insertAt}),r.styleSheet.cssText=e):(r.appendChild(document.createTextNode(e)),a(r,{insertAt:t.insertAt}))}}},{}],2:[function(e,n,t){var o=".plugin-header {\n  margin-bottom: 1rem;\n}\n.table-wrapper {\n  overflow-x: auto;\n  overflow-y: auto;\n  max-height: 400px;\n  border: 1px solid #dee2e6;\n  border-radius: 4px;\n}\ntable {\n  width: 100%;\n  table-layout: auto;\n}\n.btn-primary {\n  margin-bottom: 8px;\n}\n#ke-search {\n  width: 100%;\n  margin-bottom: 8px;\n}\ntd,\nth {\n  white-space: nowrap;\n}\n/*# sourceMappingURL=styles.css.map */\n";e("browserify-css").createStyle(o,{href:"src\\css\\styles.css"},{insertAt:"bottom"}),n.exports=o},{"browserify-css":1}],3:[function(e,n,t){e("../css/styles.css");function o(e){console.log("registering "+l+" plugin"),$(".tab-content").css("position","relative"),c=e,(p=$(c.element)).attr("id"),console.log("minerva object ",c),console.log("project id: ",c.project.data.getProjectId()),console.log("model id: ",c.project.data.getModels()[0].modelId),c.project.map.addListener({dbOverlayName:"search",type:"onSearch",callback:u}),(e=$('<div class="'+l+'-container"></div>').appendTo(p)).append('\n        <div class="panel panel-default panel-events">\n            <div class="panel-heading">Events (Select an element in the map)</div>\n            <div class="panel-body">                \n            </div>\n        </div>\n    '),e.append('<button type="button" class="btn-focus btn btn-primary btn-default btn-block">Focus</button>'),e.append('<button type="button" class="btn-highlight btn btn-primary btn-default btn-block">Highlight</button>'),e.append("<hr>"),e.append('<button type="button" class="btn-pick-random btn btn-primary btn-default btn-block">Retrieve random object from map</button>'),e.append('\n        <div class="panel panel-default panel-randomly-picked">\n            <div class="panel-heading">Randomly picked object</div>\n            <div class="panel-body">                \n            </div>\n        </div>\n    '),e.append('<button type="button" class="btn-focus-random btn btn-primary btn-default btn-block">Focus</button>'),e.append('<button type="button" class="btn-highlight-random btn btn-primary btn-default btn-block">Highlight</button>'),e.append("<hr>"),e.append("<h4>Query UniProt API</h4>"),e.append('<button type="button" class="btn-uniprot btn btn-primary btn-default btn-block" title="Queries UniProt using the element selected from the map">Retrieve from UniProt</button>'),e.append('\n        <div class="panel panel-default panel-uniprot">\n            <div class="panel-heading">Uniprot records for the selected element</div>\n            <div class="panel-body">\n                <code></code>\n            </div>\n        </div>\n    '),e.append("<hr>"),e.append("<h4>Query Minerva API</h4>"),e.append('\n        <form class="form-horizontal">\n            <div class="form-group">\n                <label class="col-sm-2 control-label">Address</label>\n                <div class="col-sm-10">\n                    <input class="input-minerva-address form-control" value="https://minerva-dev.lcsb.uni.lu/minerva">\n                </div>\n            </div>\n            <div class="form-group">\n                <label class="col-sm-2 control-label">Project ID</label>\n                <div class="col-sm-10">\n                    <input class="input-minerva-projectid form-control" value="sample2">\n                </div>\n            </div>                        \n        </form>\n        <button type="button" class="btn-minerva btn btn-primary btn-default btn-block">Retrieve from Minerva</button>\n        <div class="panel panel-default panel-minerva">\n            <div class="panel-heading">Names of elements</div>\n            <div class="panel-body">                \n            </div>\n        </div>\n    '),e.find(".btn-highlight").on("click",function(){return m()}),e.find(".btn-focus").on("click",function(){return b()}),e.find(".btn-pick-random").on("click",function(){function n(){s.pickedRandomly=s.allBioEntities[Math.floor(Math.random()*s.allBioEntities.length)];var e=s.pickedRandomly.constructor.name+" - ";"Alias"===s.pickedRandomly.constructor.name?e+=s.pickedRandomly.getElementId()+" - "+s.pickedRandomly.getName():e+=""+s.pickedRandomly.getReactionId(),p.find(".panel-randomly-picked .panel-body").html(e)}0<s.allBioEntities.length?n():c.project.data.getAllBioEntities().then(function(e){s.allBioEntities=e,n()})}),e.find(".btn-highlight-random").on("click",function(){return m(!0)}),e.find(".btn-focus-random").on("click",function(){return b(!0)}),e.find(".btn-uniprot").on("click",function(){var e;e=(e=p.find(".panel-events .panel-body").text()).substring(0,e.indexOf(" - ")),console.log(e),$.ajax({type:"GET",url:"https://www.uniprot.org/uniprot/?query="+e+"&sort=score&columns=id,entry%20name,reviewed,protein%20names,3d,genes,organism,length&format=tab&limit=10"}).then(function(e){p.find(".panel-uniprot .panel-body code").text(e)})}),e.find(".btn-minerva").on("click",function(){var n,t;n=p.find(".input-minerva-address").val(),t=p.find(".input-minerva-projectid").val(),$.ajax({type:"GET",url:d+"?url="+n+"/api/projects/"+t+"/models/",dataType:"json"}).then(function(e){console.log("Retrived models from "+d,e);e=e[0].idObject;return $.ajax({type:"GET",url:d+"?url="+n+"/api/projects/"+t+"/models/"+e+"/bioEntities/elements/",dataType:"json"})}).then(function(e){console.log("Retrived elements from "+d,e);var n="";e.forEach(function(e){n+=e.name+"<br/>"}),p.find(".panel-minerva .panel-body").html(n)})})}function i(){return console.log("unregistering "+l+" plugin"),c.project.map.removeAllListeners(),c.project.map.getHighlightedBioEntities().then(function(e){return c.project.map.hideBioEntity(e)})}function r(){return l}function a(){return"1.0.1"}var l="starter-kit",d="https://minerva-dev.lcsb.uni.lu/minerva-proxy/",s={selected:[],allBioEntities:[],pickedRandomly:void 0},c=void 0,p=void 0;function u(e){s.selected=e[0];var n="";0<s.selected.length&&s.selected.forEach(function(e){"Alias"===e.constructor.name&&(n+="<div>"+e.getName()+" - "+e.getElementId()+"</div>")}),p.find(".panel-events .panel-body").html(n)}function m(e){var n=[];0<arguments.length&&void 0!==e&&e?s.pickedRandomly&&n.push({element:{id:s.pickedRandomly.id,modelId:s.pickedRandomly.getModelId(),type:s.pickedRandomly.constructor.name.toUpperCase()},type:"SURFACE",options:{color:"#00FF00",opacity:.5}}):s.selected.forEach(function(e){n.push({element:{id:e.id,modelId:e.getModelId(),type:"ALIAS"},type:"ICON"})}),c.project.map.showBioEntity(n)}function b(e){e=0<arguments.length&&void 0!==e&&e;function n(e){"Alias"===e.constructor.name?c.project.map.fitBounds({modelId:e.getModelId(),x1:e.getX(),y1:e.getY(),x2:e.getX()+e.getWidth(),y2:e.getY()+e.getHeight()}):c.project.map.fitBounds({modelId:e.getModelId(),x1:e.getCenter().x,y1:e.getCenter().y,x2:e.getCenter().x,y2:e.getCenter().y})}!e&&0<s.selected.length&&n(s.selected[0]),e&&s.pickedRandomly&&n(s.pickedRandomly)}minervaDefine(function(){return{register:o,unregister:i,getName:r,getVersion:a}})},{"../css/styles.css":2}]},{},[3]);
